<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAADAwP/AwMD/wMDA/8EBAT/BAQE/wUFBf8GBgb/BgYG/wYGBv8GBgb/BgYG/wYGBv8GBgb/BgYG/wYG
        Bv8GBgb/BgYG/wYGBv8GBgb/BgYG/wYGBv8GBgb/BgYG/wYGBv8GBgb/BgYG/wUFBf8EBAT/BAQE/wMD
        A/8DAwP/AgIC/wMDA/8EBAT/BAQE/wUFBf8GBgb/BgYG/wYGBv8GBgb/BgYG/wcHB/8HBwf/BwcH/wcH
        B/8HBwf/BwcH/wcHB/8HBwf/BwcH/wcHB/8HBwf/BwcH/wcHB/8HBwf/BgYG/wYGBv8GBgb/BgYG/wYG
        Bv8FBQX/BAQE/wQEBP8DAwP/BQUF/wUFBf8GBgb/BgYG/wYGBv8HBwf/BwcH/wcHB/8ICAj/CAgI/wgI
        CP8HBwf/BwcH/wcHB/8DAwP/BAQE/wICAf8FBQX/BwYG/wcHB/8ICAj/CAgI/wgICP8ICAj/BwcH/wcH
        B/8HBwf/BgYG/wYGBv8GBgb/BgYG/wUFBf8GBgb/BgYG/wYGBv8HBwf/BwcH/wgICP8ICAj/CAgI/wgI
        CP8ICAj/BgYG/wcHB/8GBgb/AgIC/ygrLP8aGxz/ICIk/w0ODv8GBgb/BgYG/wYGBv8HBwf/CAgI/wgI
        CP8ICAj/CAgI/wcHB/8HBwf/BwcH/wYGBv8GBgb/BgYG/wcHB/8HBwf/BwcH/wgICP8ICAj/CQkJ/wkJ
        Cf8JCQn/CQkJ/wYGBv8PDw//AwIC/ysuMP8tLzH/VFpe/0dLT/9gZmv/LjE0/zU5PP8UFRX/CQgI/woK
        Cv8HBwf/CQkJ/wkJCf8JCQn/CQkJ/wgICP8ICAj/CAgI/wcHB/8HBwf/BwcH/wgICP8ICAj/CQkJ/wkJ
        Cf8KCgr/CwsL/woKCv8JCQn/BgYG/zY4Ov8sLzD/VVpe/1dcYf9dY2j/ZWtw/32Fiv9RVlv/V11h/zk9
        QP83Ojz/Gxwd/wUFBP8KCgr/CwsL/woKCv8KCgr/CQkJ/wkJCf8ICAj/CAgI/wcHB/8ICAj/CQkJ/wkJ
        Cf8KCgr/CwsL/wsLC/8MDAz/CAgI/xEREv8rLS7/Vltg/1VbXv+Ah4z/hIyR/5agqP+Wnqb/qbC4/4WM
        kv+Gj5X/ZGtw/1pgZf8/Q0b/HyAh/wcHB/8MDAz/CwsL/wsLC/8LCwv/CgoK/wkJCf8JCQn/CAgI/wkJ
        Cf8KCgr/CwsL/wsLC/8LCwv/DAwM/wwMDP8JCQn/Ky0u/01RVv9yeX3/cnp+/4SLkP9TV1r/QkVI/yor
        Lf8WFhf/HR4f/1xiZv97g4j/dn6C/15kaP9BREj/ExQU/wsLC/8MDAz/DAwM/wsLC/8LCwv/CwsL/woK
        Cv8JCQn/CwsL/wsLC/8LCwv/DAwM/wwMDP8NDQ3/DAwM/xESEv9JTVD/ZGpv/4iRlf86PT//BQQE/wUE
        BP8FBAT/CQkJ/w0NDf8MDAz/BAMD/wwMDP9yeHz/dn2D/15kaP8pKyz/DAsL/w4ODv8NDQ3/DAwM/wwM
        DP8LCwv/CwsL/wsLC/8LCwv/DAwM/wwMDP8NDQ3/DQ0N/w0NDf8QEA//Jygp/1tgZf9aX2P/dXyA/xgZ
        Gv8ODg7/ExMU/xITE/8SEhL/ERER/xEREf8VFRb/BAMC/05RVP9rcXb/X2Vq/0JFSf8YGRn/DQ0N/w0N
        Df8NDQ3/DQ0N/wwMDP8MDAz/CwsL/wwMDP8MDAz/DQ0N/w4ODv8ODw//Dg4O/xUVFf89QEH/U1hb/x8g
        If9RVVj/HB0e/w4ODv8RERH/ERER/xEREf8RERH/ERER/xMTE/8ICAf/Q0ZJ/zc5O/81ODr/VFhc/yYo
        KP8PDg7/Dw8P/w4ODv8NDQ3/DQ0N/w0NDf8MDAz/DQ0N/w0NDf8ODg7/Dw8P/xAREf8ODQ3/Hh8f/0tP
        U/9KT1L/KCkq/xQUFP8VFRX/EhER/xISEv8SEhL/EhIS/xISEv8SEhL/EhIS/xEREf8YGBn/FhcX/zo8
        Pv9PVFj/OTw+/w8QD/8QEBD/EBAQ/w4ODv8ODg7/DQ0N/w0NDf8ODg7/Dg4O/w8PD/8QEBD/ERER/w0N
        Df8kJSb/UlZa/0pOUv82ODr/Dw8P/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/FBQU/xAP
        D/8bHBz/R0tO/05TV/9FSUz/EBAP/xEREf8QEBD/EBAQ/w8PD/8PDw//Dg4O/w8PD/8QEBD/EBAQ/xAQ
        EP8RERH/EBAQ/xUVFf81Nzj/KCor/xISEv8UFBT/FRUV/xUVFf8VFRX/FRUV/xUVFf8VFRX/FBQU/xUV
        Ff8VFRX/FRUV/xISEv8ZGhr/Njk7/ycpKf8QDw//EhIS/xEREf8QEBD/EBAQ/xAQEP8ODg7/EBAQ/xAQ
        EP8QEBD/ERER/xISEv8SEhL/EhIS/xobG/8UFBT/FBQU/xUVFf8VFRX/FRUV/xYWFv8WFhb/FhYW/xYW
        Fv8WFhb/FhYW/xUVFf8VFRX/FBQU/xIREf8ZGRn/GRkZ/xIREf8SEhL/EhIS/xISEv8RERH/EBAQ/xAQ
        EP8QEBD/ERER/xISEv8SEhL/EhIS/xQUFP8VFRX/FBQU/xUVFf8TExP/EhIS/xMTE/8UFBT/FRUV/xUV
        Ff8VFRX/FRUV/xUVFf8TExP/ExMT/xISEv8SEhL/ExMT/xQUFP8UFBT/FBQU/xMTE/8TExP/EhIS/xIS
        Ev8RERH/EBAQ/xEREf8SEhL/EhIS/xMTE/8UFBT/FRUV/xUVFf8VFRX/EhIS/xEREf8SEhL/ERER/xIS
        Ev8SEhL/EhIS/xISEv8SEhL/EhIS/xISEv8RERH/ERER/xAQEP8RERH/ExMT/xUVFf8VFRX/FRUV/xQU
        FP8TExP/EhIS/xISEv8RERH/EhIS/xISEv8TExP/FBQU/xUVFf8VFRX/FRUV/xMTE/8RERH/EBAQ/w0N
        Df8PDw//EBAQ/xAQEP8QEBD/ERER/xAQEP8QEBD/EBAQ/w8PD/8ODg7/DAwM/xAQEP8RERL/FRUV/xYW
        Fv8VFRX/FRUV/xQUFP8TExP/EhIS/xISEv8SEhL/ExMT/xQUFP8VFRX/FRUV/xYWFv8VFRX/EhIS/xAQ
        EP8LCwv/FRYW/xAREf8MDAz/Dg4O/w4ODv8ODg7/Dg4O/w4ODv8NDQ3/DAwM/xAQEP8UFRX/CwsL/xER
        Ef8TFBT/FhYW/xYWFv8VFRX/FRUV/xUVFf8TExP/EhIS/xMTE/8UFBT/FRUV/xUVFf8XFxf/FxcX/xcX
        F/8TFBP/CgoJ/xQVFf9FSk3/Dw8P/wwMDP8ODg7/DQ0N/wwNDP8MDAz/DAwM/w0NDf8MDAz/DQ4O/0RJ
        Tf8VFRb/CwoK/xUVFf8YGBj/FxcX/xYWFv8WFhb/FRUV/xQUFP8TExP/FBQU/xUVFf8VFRX/FhYW/xcX
        F/8WFRX/JScn/y8yM/85PD7/VFle/1VbYP8AAAD/BgUF/wICAv8GBgb/CgkJ/wsLC/8JCQn/BgUF/wYG
        Bv8AAAD/VFpf/1VaX/85PD7/LzEz/yYnKP8WFhb/FxcX/xYWFv8WFhb/FRUV/xQUFP8VFRX/FRUV/xcX
        F/8XFxf/GBgY/xcWFv8uMTL/SlBU/1thZv+FjpT/Z290/yYpKv8bHR7/KSst/xQVFv8EBAX/AAAB/wQF
        Bf8XGBn/FRYX/yAiI/9nbnT/ho6V/1xhZ/9LUFT/LzEx/xYWFv8YGRn/FxcX/xYWFv8VFRX/FRUV/xUV
        Ff8WFhb/FxcX/xgYGP8aGhr/FxcX/ywuL/9aYGX/X2Zr/5miqv+FjZT/s7zD/7/Iz/+5xMz/2+Lm/6mu
        sv+fpKj/v8fM/623vv++x83/s7zD/4OLkf+bo6v/X2dr/1pgZf8tLzD/FxcW/xkZGf8XFxf/FxcX/xYW
        Fv8VFRX/FhYW/xcXF/8XFxf/GBgY/xoaGv8YGBj/JCYm/1xiZ/9mbXP/rLS8/5ScpP+zvMH/1t/m/7bB
        yv/4/f//2eDl/+Dl5//1/P//tsHK/9jh5/+wusD/kZqh/622vf9lbXP/XGJn/yUmJ/8YFxf/Ghsb/xkZ
        Gf8XFxf/FxcX/xYWFv8WFhb/FxcX/xgYGP8ZGRn/Ghoa/xsbG/8cHRz/MjQ2/2Bobf+3vsb/q7O6/7a/
        xf+lrLL/naat/+31+//BytH/ydDU/+z0+v+ao6v/nqas/664v/+qsrn/uL/G/2Fobv8yNTb/HBwc/xsb
        G/8aGhr/GRkZ/xgYGP8XFxf/FhYW/xcXF/8XFxf/GRkZ/xoaGv8aGhr/Gxwc/xsbG/8fHx//Ki4v/621
        vP+LkJX/gomO/zQ2N/+BiY//6PL7/6qzuf+wt73/6/X9/4CHjf8xMjP/fYWK/4mQlP+utr3/Ky4w/x8f
        H/8bGxv/HBwc/xsbG/8aGhr/GRkZ/xcXF/8XFxf/FxcX/xgYGP8aGhr/Ghoa/xsbG/8bGxv/HR0d/x8f
        H/8YFxf/Wl9j/zQ2OP8nKCn/GBcX/1dcX//e6vT/eYCE/3yBhv/f6/T/VVld/xgXF/8oKCn/NDU3/1tg
        ZP8YGBf/Hx8f/x0dHf8cHBz/Gxsb/xoaGv8aGhr/GBgY/xcXF/8XFxf/GBgY/xoaGv8bGxv/Gxsb/xwc
        HP8dHR3/Hx8f/yAgIP8eHR3/ICAg/yAgIP8iIiL/JCQj/0xPUf8sLS7/LS0u/0xOUf8jIyP/IiIi/yAg
        IP8gICD/Hh0d/yAgIP8fHx//HR0d/xwcHP8cHBz/Gxsb/xoaGv8YGBj/FxcX/xgYGP8ZGRn/Ghoa/xsb
        G/8cHBz/HBwc/x4eHv8fHx//ICAg/yEhIf8iIiL/IyMj/yQkJP8kJCT/HBwb/yMiIv8iIiL/HBwc/yQk
        JP8kJCT/IyMj/yIiIv8hISH/ICAg/x8fH/8eHh7/HR0d/xwcHP8bGxv/Ghoa/xkZGf8XFxf/GBgY/xkZ
        Gf8bGxv/Gxsb/xwcHP8dHR3/Hx8f/x8fH/8gICD/ISEh/yIiIv8kJCT/JCQk/yUlJf8nJyf/JiYm/yYm
        Jv8nJyf/JSUl/yQkJP8kJCT/IiIi/yEhIf8gICD/ICAg/x8fH/8dHR3/HBwc/xsbG/8aGhr/Ghoa/xgY
        GP8YGBj/Ghoa/xsbG/8bGxv/HBwc/x4eHv8fHx//ICAg/yEhIf8hISH/IyMj/yQkJP8kJCT/JiYm/yYm
        Jv8nJyf/Jycn/yYmJv8lJSX/JSUl/yQkJP8jIyP/IiIi/yAgIP8gICD/Hx8f/x4eHv8cHBz/Gxsb/xoa
        Gv8aGhr/GBgY/xgYGP8aGhr/Ghoa/xwcHP8cHBz/Hh4e/x8fH/8gICD/ISEh/yIiIv8jIyP/JCQk/yUl
        Jf8mJib/Jycn/ygoKP8oKCj/Jycn/yYmJv8lJSX/JCQk/yQkJP8iIiL/ISEh/yAgIP8fHx//Hh4e/x0d
        Hf8bGxv/Gxsb/xoaGv8YGBj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>